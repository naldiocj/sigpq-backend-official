version: '3.7'

services:
  mysql_piips:
    container_name: "mysql_piips"
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "0.0.0.0:${DB_PORT}:3306"
    volumes:
      - ./docker_data/db:/var/lib/mysql
    networks:
      - piips

  mongo_piips:
    container_name: mongo_piips
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=Auditable
    ports:
      - "27017:27017"
      - "27019:27019"
    volumes:
      - ./mongo_piips_data:/data/db
    networks:
      - piips

  # redis_piips:
  #   container_name: redis_piips
  #   image: redis:latest
  #   ports:
  #    - "6379:6379"
  #   networks:
  #     - piips

  # queue_piips:
  #   container_name: queue_piips
  #   image: rabbitmq:3-management
  #   restart: always
  #   ports:
  #    - "5672:5672"
  #    - "15672:15672"
  #   networks:
  #     - piips

# volumes:
#   mysql_piips_data:
#     driver: local
#   mongo_piips_data:
#     driver: local

networks:
  piips:
    external: true

# Execute o Docker Compose:
# docker-compose up -d

# Quando quiser parar o servi√ßo MySQL, execute:
# docker-compose down
